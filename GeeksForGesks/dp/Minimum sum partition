//Minimum sum partition 
//GfG:  https://practice.geeksforgeeks.org/problems/minimum-sum-partition3317/1
//difficulty: hard


#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin>>t;
    while(t--)
    {
    int n;
    cin>>n;
    int arr[n];
    int sum=0,minm;
    for(int i=0;i<n;i++)
    {
    cin>>arr[i];
    sum+=arr[i];
    }
    minm=INT_MAX;
    int k=sum/2;
    bool dp[n+1][sum+1];
    for(int i=0;i<n+1;i++)
    dp[i][0]=true;
    for(int i=1;i<sum+1;i++)
    dp[0][i]=false;
    for(int i=1;i<n+1;i++)
    {
        for(int j=1;j<sum+1;j++)
        {
            dp[i][j]=dp[i-1][j];
            if(arr[i-1]<=j)
            dp[i][j]|=dp[i-1][j-arr[i-1]];
        }
    }
   for(int j=k;j>=0;j--)
   {
       if(dp[n][j]==true)
       {
           minm=sum-2*j;
           break;
       }
   }

   cout<<minm<<"\n";
    }
    
   	return 0;
}
